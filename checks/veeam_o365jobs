#!/usr/bin/env python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
#
# Copyright (C) 2020  Marius Rieder <marius.rieder@durchmesser.ch>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

# <<<veeam_o365jobs:sep(9) >>>
# 01234567-89ab-cdef-0123-456789abcdef  cmk.onmicrosoft.com Outlook Online  Success 29.05.2020 16:45:46 29.05.2020 16:47:55 128.7511818 191 142

factory_settings['veeam_o365jobs_default_levels'] = {
    'states': {
        'Success': 0,
        'Warning': 1,
        'Stopped': 1,
        'Failed':  2,
    }
}
inventory_veeam_o365jobs_rules = []


def inventory_veeam_o365jobs(info):
    settings = host_extra_conf_merged(host_name(), inventory_veeam_o365jobs_rules)
    appearance = settings.get('item_appearance', 'name')

    for line in info:
        name = line[2]
        if appearance == 'short':
            name = "%s %s" % (line[1].replace('.onmicrosoft.com', ''), line[2])
        elif appearance == 'full':
            name = "%s %s" % (line[1], line[2])
        yield name, {'jobId': line[0]}


def check_veeam_o365jobs(item, params, info):
    for line in info:
        if line[0] != params['jobId']:
            continue

        job_org, job_name, job_state, \
            job_creation_time, job_end_time, job_duration, \
            job_objects, job_transferred = line[1:9]

        if job_state in ['Running']:
            yield 0, 'Running since %s (current state is: %s)' % (job_creation_time, job_state)
            return

        state = params.get('states').get(job_state, 3)
        yield state, "Status: %s" % job_state

        yield check_levels(saveint(job_objects),
                           'items',
                           None,
                           infoname='Transferred Items')
        yield check_levels(savefloat(job_transferred),
                           'transferred',
                           None,
                           human_readable_func=get_filesize_human_readable,
                           infoname='Transferred Data')
        yield check_levels(savefloat(job_duration),
                           'duration',
                           params.get('duration', None),
                           human_readable_func=get_age_human_readable,
                           infoname='Backup duration')


check_info['veeam_o365jobs'] = {
    'inventory_function': inventory_veeam_o365jobs,
    'check_function': check_veeam_o365jobs,
    'service_description': 'VEEAM O365 Job %s',
    'has_perfdata': True,
    'group': 'veeam_o365jobs',
    'default_levels_variable': 'veeam_o365jobs_default_levels',
}
